(define-module (semi packages xremap)
  #:use-module (semi packages)
  #:use-module (gnu packages crates-io)
  #:use-module (semi packages crates-io)
  #:use-module (guix build-system cargo)
  #:use-module (guix packages)
  #:use-module (guix download)
  #:use-module (guix utils)
  #:use-module ((guix licenses) #:prefix license:))

(define-public xremap-0.8
  (package
   (name "xremap")
   (version "0.8.0")
   (source (origin
            (method url-fetch)
            (uri (crate-uri "xremap" version))
            (file-name (string-append name "-" version ".tar.gz"))
            (sha256
             (base32
              "0ar1lmqnnli92afrl21ka6qqny9sjr6w6arprdqhvrlnwyh7sd3z"))))
   (build-system cargo-build-system)
   (arguments
    `(#:cargo-inputs (("rust-anyhow" ,rust-anyhow-1)
                      ("rust-clap" ,rust-clap-3)
                      ("rust-clap-complete" ,rust-clap-complete-3)
                      ("rust-derive-where" ,rust-derive-where-1)
                      ("rust-env-logger" ,rust-env-logger-0.9)
                      ("rust-evdev" ,rust-evdev-0.12)
                      ("rust-fork" ,rust-fork-0.1)
                      ("rust-hyprland" ,rust-hyprland-0.2)
                      ("rust-indoc" ,rust-indoc-1)
                      ("rust-lazy-static" ,rust-lazy-static-1)
                      ("rust-log" ,rust-log-0.4)
		      ("rust-log" ,rust-lock-api-0.4)
                      ("rust-nix" ,rust-nix-0.26)
                      ("rust-regex" ,rust-regex-1)
                      ("rust-serde" ,rust-serde-1)
                      ("rust-serde-json" ,rust-serde-json-1)
                      ("rust-serde-with" ,rust-serde-with-2)
                      ("rust-serde-yaml" ,rust-serde-yaml-0.9)
                      ("rust-swayipc" ,rust-swayipc-3)
                      ("rust-x11rb" ,rust-x11rb-0.11)
                      ("rust-zbus" ,rust-zbus-1))))
   (home-page "")
   (synopsis "Dynamic key remapper for X and Wayland")
   (description "Dynamic key remapper for X and Wayland")
   (license license:expat)))
